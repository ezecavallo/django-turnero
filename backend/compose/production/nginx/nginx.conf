user nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Basic Settings
    sendfile on;
    keepalive_timeout 15;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # SSL
    # Befere activate ssl lines below you must to generate the certificates
    ssl_certificate /etc/nginx/ssl/live/{domain.com}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/{domain.com}/privkey.pem;
    # Logging
    # access_log off;

    # Gzip Settings
    gzip             on;
    gzip_comp_level  2;
    gzip_min_length  1000;
    gzip_proxied     expired no-cache no-store private auth;
    gzip_types       text/plain application/x-javascript text/xml text/css application/xml;

    # Redirect to proxy https :8080 for main domain
    server {
        #listen [::]:80;
        #listen 80 ;

        listen [::]:443 ssl http2;
        listen 443 ssl http2;
        server_name  {domain.com};

        location / {
            proxy_pass http://django:5000;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        location /static/ {
            alias /var/www/staticfiles/;
        }

        location /flower {
            rewrite ^/flower/(.*)$ /$1 break;
            proxy_pass http://django:5555;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        location ~ /.well-known/acme-challenge {
            allow all;
            root /var/www/certbot;
        }
    }

    # Redirect https www to https
    # server {
    #     listen [::]:443 ssl http2;
    #     listen 443 ssl http2;

    #     server_name server_name.com;

    #     # Redirect https www to https
    #     return 301 server_name.com$request_uri;
    # }

    # Redirect http to https
    server {
        listen [::]:80 default_server;
        listen 80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }
}
